Hurdle 1
def turn_right():
    turn_left()
    turn_left()
    turn_left()
def step ():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_left()

step()
step()
step()
step()
step()
step()


Hurdle 2
def turn_right(): 
     turn_left
     turn_left
     turn_left 

def jump(): 
     move() 
     turn_left() 
     move() 
     turn_right() 
     move() 
     turn_right() 
     move() 
     turn_left() 

while (not(at_goal)): 
     jump()



Hurdle 3
def turn_right():
    turn_left()
    turn_left()
    turn_left()

def pass_wall():
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()

while at_goal() == False:
    if wall_in_front():
        pass_wall()
   elif not wall_in_front():
       move()


Hurdle 4
def turn_right(): 
    turn_left()
    turn_left()
    turn_left()
    
def jump(): 
    turn_left() 
    while wall_on_right(): 
        move()
    while right_is_clear(): 
        turn_right() 
        move()
        turn_right() 
        move()
    while front_is_clear(): 
        move()
    while wall_in_front(): 
        turn_left() 
        
while (not at_goal()):  
    if wall_in_front():
        jump()
    else: 
        move()


Maze
def hadap_kanan():
    turn_left()
    turn_left()
    turn_left()
    
def putar_balik():
    turn_left()
    turn_left()
    
    
    
while not at_goal():
    if front_is_clear():
        move()
    elif right_is_clear():
        hadap_kanan()
    elif wall_in_front():
        turn_left()
        if wall_in_front():
            putar_balik()
            
